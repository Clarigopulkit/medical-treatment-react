{"version":3,"sources":["features/validations/Messages.ts","features/SP/Doctor/AddNewDoctor/AddNewDoctor.tsx"],"names":["ValidationMessages","required","max","invalid","DOES_NOT_EXISTS","min","invaild","useStyles","makeStyles","theme","createStyles","paper","position","outline","width","backgroundColor","palette","background","top","left","transform","boxShadow","shadows","padding","spacing","borderWidth","borderColor","borderStyle","root","boxSizing","fs35","fontSize","border50","borderRadius","border","px4","paddingLeft","paddingRight","py4","paddingTop","paddingBottom","p4","BGWhite","JCE","justifyContent","buttonOverlay","typogarphy","textAlign","paper_modal","margin","height","changeSelect","breakpoints","down","up","flexWrap","AddNewDoctor","rand","Math","round","random","classes","dispatch","useAppDispatch","useHistory","useState","React","open","setOpen","handleClose","modalStyle","body","style","className","Grid","container","item","xs","lg","Box","display","color","onClick","Typography","variant","id","alignItems","enableReinitialize","initialValues","email","name","invite_msg","phone","linkedin_profile","profile","validationSchema","Yup","matches","Regex","NAME","EMAIL","onSubmit","values","setSubmitting","resetForm","loadSpinner","AddDoctorClinic","then","result","type","closeSpinner","Toast","success","error","payload","response","data","message","errors","handleChange","touched","handleBlur","handleSubmit","setFieldValue","isSubmitting","autoComplete","encType","borderBottom","fontWeight","md","sm","fullWidth","fieldName","value","placeholder","onChange","onBlur","helperText","multiline","InputProps","minHeight","textAlignVertical","inputProps","Modal","marginRight","onClose"],"mappings":"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","file":"static/js/9.2546405d.chunk.js","sourcesContent":["export const ValidationMessages = {\n  DOT_NUMBER: {\n    required: \"Please enter DOT Number.\",\n    invalid: \"Please enter the Valid DOT Number.\",\n    max: \"Please enter the Vaild DOT Number, less than 8 Digits.\",\n    min: \"Please enter the Vaild DOT Number, minimum than 8 Digits.\",\n  },\n  OTP: {\n    required: \"Please enter OTP.\",\n    max: \"Please enter the OTP less than 6 digits.\",\n    invalid: \"Please enter the valid OTP.\",\n  },\n  EMAIL: {\n    required: \"Please enter the email address.\",\n    max: \"Please enter email address less than 255 character.\",\n    invalid: \"Please enter valid the email address.\",\n    DOES_NOT_EXISTS: \"Email doesn't exists.\",\n  },\n  PHONE: {\n    required: \"Please enter the phone number.\",\n    invalid: \"Please enter valid the phone number.\",\n    DOES_NOT_EXISTS: \"Phone doesn't exists.\",\n  },\n  EMAIL_OR_PHONE: {\n    required: \"Please enter the email address or phone.\",\n    invalid: \"Please enter valid the email address or phone.\",\n  },\n  PASSWORD: {\n    required: \"Please enter the password.\",\n    invalid:\n      \"Please enter valid the password, Password must contain at least 8 characters, one uppercase, one number and one special case character\",\n  },\n  CONFIRM_PASSWORD: {\n    required: \"Please enter the confirm password.\",\n    invalid: \"Please enter the match the password.\",\n  },\n  ACCEPT_TERM: {\n    required: \"Please accept the terms and conditions.\",\n  },\n  USERTYPE: {\n    required: \"Please select the user type.\",\n  },\n  FIRSTNAME: {\n    required: \"Please enter the first name.\",\n    min: \"Please enter first name atleast 2 character.\",\n    max: \"Please enter first name less than 50 character.\",\n    invaild: \"Please enter valid first name\",\n  },\n\n  fullName: {\n    required: \"Please enter the  Name.\",\n    min: \"Please enter Name atleast 2 character.\",\n    max: \"Please enter Name less than 50 character.\",\n    invaild: \"Please enter valid  Name\",\n  },\n\n  invitationText: {\n    required: \"Please enter the Invitation Text.\",\n    min: \"Please enter atleast 2 character.\",\n    max: \"Please enter less than 200 character.\",\n    invaild: \"Please enter valid Text\",\n  },\n  LASTNAME: {\n    required: \"Please enter the last name.\",\n    min: \"Please enter last name atleast 2 character.\",\n    max: \"Please enter last name less than 50 character.\",\n    invaild: \"Please enter valid last name\",\n  },\n  ADDRESS: {\n    required: \"Please enter the address.\",\n    min: \"Please enter address atleast 5 character.\",\n    max: \"Please enter address less than 100 character.\",\n  },\n  CITY: {\n    required: \"Please enter the city.\",\n    min: \"Please enter city atleast 2 character.\",\n    max: \"Please enter city less than 50 character.\",\n  },\n  STATE: {\n    required: \"Please enter the state.\",\n    min: \"Please enter state atleast 2 character.\",\n    max: \"Please enter state less than 50 character.\",\n    invaild: \"Please enter valid state name.\",\n  },\n  ZIP: {\n    required: \"Please enter the zip code.\",\n    invaild: \"Please enter the valid zip code.\",\n  },\n  COUNTRY: {\n    required: \"Please enter the country.\",\n    min: \"Please enter country atleast 2 character.\",\n    max: \"Please enter country less than 50 character.\",\n    invaild: \"Please enter valid country name.\",\n  },\n  ADDRESSTYPE: {\n    required: \"Please choose options for address type.\",\n  },\n  SUBJECT: {\n    required: \"Please enter the subject.\",\n    max: \"Please enter state less than 60 character.\",\n  },\n  MESSAGE: {\n    required: \"Please enter the message.\",\n    min: \"Please enter message atleast 10 character.\",\n    max: \"Please enter state less than 200 character.\",\n  },\n  LINK: {\n    INVALID_LINK: \"Please enter valid link.\",\n    VALID_LINK: \"Link verified.\",\n    invalid: \"Invalid link.\",\n  },\n  FORGOT: {\n    LINK: \"Verification email sent\",\n  },\n  invitation_text:{\n    required: \"Please enter the invitation text.\",\n  }\n};\n","import React, { useState } from \"react\";\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport { Box, ButtonBase, Grid, Paper, Typography } from \"@material-ui/core\";\nimport { TextField } from \"@material-ui/core\";\nimport { Theme, createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport { Link } from \"react-router-dom\";\nimport { BrowserRouter as Router, useHistory, useRouteMatch } from \"react-router-dom\";\nimport { AddDoctorClinic } from \"../addDoctor/addDoctorSlice\";\nimport { useForm } from \"react-hook-form\";\nimport { useAppDispatch } from \"../../../../hooks/hooks\";\nimport CustomTextField from \"../../../reusable/customTextField/customTextField\";\nimport { grey } from \"@material-ui/core/colors\";\nimport CustomButton from \"../../../reusable/customButton/customButton\";\nimport CustomModal from \"../../../reusable/customModal/customModal\";\nimport * as Yup from \"yup\";\nimport { Regex } from \"../../../validations/Regex\";\nimport { ValidationMessages } from \"../../../validations/Messages\";\nimport AutoErrorMessage from \"../../../autoErrorMessage/autoErrorMessage\";\nimport Button from \"@material-ui/core/Button\";\nimport { displayPartsToString } from \"typescript\";\nimport Modal from \"@material-ui/core/Modal\";\n\nimport CloseIcon from \"@material-ui/icons/Close\";\n// import Typography from \"material-ui/c\";\nimport \"./index.css\";\nimport Toast from \"../../../../reducres/reducers/toast\";\nimport { closeSpinner, loadSpinner } from \"../../../../reducres/reducers/spinner\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    paper: {\n      position: \"absolute\",\n      outline: \"none\",\n      width: 400,\n      backgroundColor: theme.palette.background.paper,top: '50% !important',\n      left: '50% !important',\n      transform: 'translate(-50%, -50%)!important',\n      // border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),borderWidth:2,borderColor:'#debcbd',borderStyle : 'solid',\n    },\n\n    root: {\n      // display: \"flex\",\n      width: \"100%\",\n\n      \"& > *\": {\n        // margin: theme.spacing(2),\n        width: \"100%\",\n        // height: theme.spacing(16),\n        boxSizing: \"border-box !important\",\n      },\n    },\n    fs35: {\n      fontSize: \"35px\",\n    },\n    border50: {\n      borderRadius: \"50px\",\n    },\n\n    outline: {\n      border: \"1px solid grey\",\n    },\n    px4: {\n      paddingLeft: \"1.5rem\",\n      paddingRight: \"1.5rem\",\n    },\n\n    py4: {\n      paddingTop: \"1.5rem\",\n      paddingBottom: \"1.5rem\",\n    },\n\n    p4: {\n      paddingLeft: \"1.5rem\",\n      paddingRight: \"1.5rem\",\n\n      paddingTop: \"1.5rem\",\n      paddingBottom: \"1.5rem\",\n    },\n    BGWhite: {\n      backgroundColor: \"white\",\n    },\n    JCE: {\n      justifyContent: \"flex-end\",\n    },\n    buttonOverlay: {\n      width: \"100%\",\n      background: \"transparent\",\n      border: \"none\",\n    },\n    typogarphy: {\n      textAlign: \"center\",\n    },\n    \n\n    paper_modal: {\n      // width: \"100px\",\n      // height: \"100px\",\n      margin: theme.spacing(1),\n      width: theme.spacing(20),\n      height: theme.spacing(20),\n      borderRadius: \"5px\",\n    },\n\n    changeSelect: {\n      \"& >span > div\": {\n        margin: \"0 !important\",\n      },\n      \"& >span > lable > div > span \": {\n        margin: \"0 !important\",\n        width: \"100% !important\",\n      },\n      \"& > span \": {\n        paddingRight: \"20px !important\",\n        paddingLeft: \"40px\",\n      },\n      [theme.breakpoints.down(\"xs\")]: {\n        \"& > *\": {\n          padding: \"0px !important\",\n        },\n      },\n      [theme.breakpoints.up(\"md\")]: {\n        // \"& > *\": {\n        //   padding: \"0px !important\",\n        // },\n        flexWrap: \"noWrap\",\n      },\n    },\n  })\n);\n\nconst AddNewDoctor = () => {\n  function rand() {\n    return Math.round(Math.random() * 20) - 10;\n  }\n\n  function getModalStyle() {\n    const top = 50 + rand();\n    const left = 50 + rand();\n\n    return {\n      top: `${top}%`,\n      left: `${left}%`,\n      transform: `translate(-${top}%, -${left}%)`,\n      borderStyle: \"solid\", borderColor: \"#debcbd\"\n    };\n  }\n\n  const classes = useStyles();\n\n  const dispatch = useAppDispatch();\n  const history = useHistory();\n\n  const [myProfileImage, setMyProfile] = useState(\"\");\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [modalStyle] = React.useState(getModalStyle);\n\n  const body = (\n    <div style={modalStyle} className={classes.paper}>\n      <Grid container>\n        <Grid item xs={12} lg={12}>\n          <Box display=\"flex\" justifyContent=\"flex-end\">\n            <CloseIcon style={{color:'#085044'}} className=\"cancel-icon\" onClick={handleClose} />\n          </Box>\n        </Grid>\n\n        <Grid item xs={12} lg={12} >\n          <Typography\n            variant=\"h5\"\n            className=\"modal-heading\"\n            id=\"simple-modal-title\"\n            style={{alignItems:\"center\",justifyContent:\"center\",textAlign:'center',color:'#085044'}}\n          >\n            Invitation has been sent\n            <br />\n            via email\n          </Typography>\n          <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" >\n            <CustomButton\n              variant=\"filled\"\n              onClick={() => {\n                handleClose();\n              }}\n            >\n              Ok\n            </CustomButton>\n          </Box>\n        </Grid>\n      </Grid>\n    </div>\n  );\n  return (\n    <>\n      {/* <AutoErrorMessage /> */}\n      <Formik\n      enableReinitialize={true}\n        initialValues={{\n          email: \"\",\n          name: \"\",\n          invite_msg: \"\",\n          phone: \"\",\n          linkedin_profile: \"\",\n          profile: {},\n        }}\n        validationSchema={Yup.object({\n          name: Yup.string()\n            .required(ValidationMessages.fullName.required)\n            .min(2, ValidationMessages.fullName.min)\n            .max(50, ValidationMessages.fullName.max)\n            .matches(Regex.NAME, ValidationMessages.fullName.invaild),\n          email: Yup.string()\n            .required(ValidationMessages.EMAIL.required)\n            .max(255, ValidationMessages.EMAIL.max)\n            .matches(Regex.EMAIL, ValidationMessages.EMAIL.invalid),\n\n            invite_msg: Yup.string().required(\n                ValidationMessages.invitation_text.required\n              ),\n\n          // linkedin_profile: Yup.string().required(\n          //   ValidationMessages.fullName.required\n          // ),\n\n          // phone: Yup.string()\n          //   .required(ValidationMessages.PHONE.required)\n          //   .min(10, ValidationMessages.PHONE.DOES_NOT_EXISTS)\n          //   .max(10, ValidationMessages.PHONE.invalid)\n          //   .matches(Regex.PHONE, ValidationMessages.PHONE.invalid),\n        })}\n        onSubmit={(values, { setSubmitting ,resetForm}) => {\n          dispatch(loadSpinner());\n          dispatch(AddDoctorClinic(values)).then((result) => {\n            // @ Check Wether Request is Fulfilled or not\n            if (result.type === \"AddDoctor/fulfilled\") {\n              resetForm();\n              dispatch(closeSpinner());\n              Toast.success(\"Successfully Sent Invitation.\");\n              // history.push(\"/clinic-personal-info/\");\n              setOpen(true);\n            } else {\n              dispatch(closeSpinner());\n              Toast.error(result?.payload?.response?.data?.message);\n            }\n          });\n        }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          setFieldValue,\n          isSubmitting,\n          resetForm\n          /* and other goodies */\n        }) => (\n          <form\n            onSubmit={handleSubmit}\n            autoComplete=\"off\"\n            encType=\"multiPart/form-data\"\n          >\n            <Grid\n              container\n              spacing={5}\n              style={{ justifyContent: \"center\", paddingBottom: \"2rem\", }}\n            >\n              {/* <Grid item lg={10} className=\"py-4\">\n                <Grid item lg={12}>\n                  <Grid container alignItems=\"center\">\n                    <ArrowBackIcon\n                      className={classes.fs35}\n                      onClick={() => {\n                        history.replace(\"/clinic-personal-info\");\n                      }}\n                    />\n                    <Typography variant=\"h3\" className=\"main-heading\">\n                      <Grid item className={classes.fs35}>\n                        Add Doctor\n                      </Grid>\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Grid> */}\n\n              <Grid\n                item\n                lg={10}\n                className=\"\"\n                style={{\n                  border: \"1px solid #debcbd\",\n                  background: \"white\",\n                  paddingLeft: \"0px\",\n                  paddingRight: \"0px\",\n                }}\n              >\n                <Grid\n                  // className=\"office-address-title\"\n                  style={{ borderBottom:0 }}\n                >\n                  <Typography\n                    style={{\n                      fontSize: \"20px\",\n                      fontWeight: 700,\n                      // borderBottom: \"1px solid #debcbd\",\n                      // paddingBottom: \"10px\",\n                      paddingTop: \"0px\",\n                      paddingLeft: \"2rem\",\n                      paddingRight: \"2rem\",color:'#085044'\n                    }}\n                  >\n                    Add Doctor\n                  </Typography>\n                </Grid>\n                {/* <Grid\n                  container\n                  style={{ justifyContent: \"space-between\" }}\n                  className=\"py-4 px-4\"\n                >\n                  <Grid item xs={12} lg={2}>\n                    <Box\n                      display=\"flex\"\n                      flexWrap=\"wrap\"\n                      flexDirection=\"column\"\n                      alignItems=\"center\"\n                      className={classes.changeSelect}\n                    >\n                      <img\n                        src=\"https://images.hindustantimes.com/rf/image_size_640x362/HT/p2/2016/10/22/Pictures/_26338b52-9834-11e6-98f6-96638e85be2b.jpg\"\n                        width=\"180px\"\n                      />\n                      <div style={{ paddingTop: \"10px\", width: \"100%\" }}>\n                        <label htmlFor=\"contained-button-file\">\n                          <CustomButton\n                            component=\"span\"\n                            fullWidth\n                            className=\"green-button\"\n                            style={{ fontSize: \"15px\" }}\n                          >\n                            Upload Picture\n                            <input\n                              hidden\n                              id=\"contained-button-file\"\n                              type=\"file\"\n                              onChange={(e) => {\n                                setFieldValue(\"profile\", e.target.files[0]);\n                              }}\n                            />\n                          </CustomButton>\n                        </label>\n                      </div>\n                    </Box>\n                  </Grid>\n                </Grid> */}\n\n                <Grid\n                  container\n                  spacing={5}\n                  style={{ justifyContent: \"space-between\" }}\n                  className=\"py-4 px-4\"\n                >\n                  <Grid item lg={6} md={6} sm={6} xs={12}>\n                    <CustomTextField\n                      className=\"login-text-field\"\n                      fullWidth\n                      fieldName={\"First Name\"}\n                      variant={\"outlined\"}\n                      value={values.name}\n                      placeholder=\"First Name\"\n                      name=\"name\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      helperText={errors.name && errors.name}\n                      error={errors && errors.name ? true : false}\n                    />\n                  </Grid>\n                  <Grid item lg={6} md={6} sm={6} xs={12}>\n                    <CustomTextField\n                      className=\"login-text-field\"\n                      fullWidth\n                      name=\"email\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      fieldName={\"Email\"}\n                      variant={\"outlined\"}\n                      value={values.email}\n                      placeholder=\"Email\"\n                      helperText={errors.email && errors.email}\n                      error={errors && errors.email ? true : false}\n                    />\n                  </Grid>\n                   {/* <Grid item lg={6} md={6} sm={6} xs={12}>\n                    <CustomTextField\n                      className=\"login-text-field\"\n                      fullWidth\n                      fieldName={\"Phone Number\"}\n                      variant={\"outlined\"}\n                      name=\"phone\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      placeholder=\"Phone Number\"\n                      helperText={errors.phone && errors.phone}\n                      error={errors && errors.phone ? true : false}\n                    />\n                  </Grid> */}\n                  <Grid item lg={12} md={6} sm={6} xs={12}>\n                    <CustomTextField\n                      className=\"login-text-field\"\n                      fullWidth\n                      multiline\n                      InputProps={{style : {minHeight : 150, textAlignVertical : 'top'}}}\n                      inputProps={{style : {minHeight :150}}}\n                      name=\"invite_msg\"\n                      onChange={handleChange}\n                      value={values.invite_msg}\n                      onBlur={handleBlur}\n                      fieldName={\"Invitation Text\"}\n                      variant={\"outlined\"}\n                      placeholder=\"Invitation Text\"\n                      helperText={\n                        errors.invite_msg && errors.invite_msg\n                      }\n                      error={errors && errors.invite_msg ? true : false}\n                    />\n                  </Grid>\n                </Grid>\n\n                <div>\n                  <Modal\n                  style={{marginRight:90,}}\n                    open={open}\n                    onClose={handleClose}\n                    aria-labelledby=\"simple-modal-title\"\n                    aria-describedby=\"simple-modal-description\"\n                  >\n                    {body}\n                  </Modal>\n                </div>\n\n                <Grid\n                  item\n                  className=\"py-4 px-4\"\n                  style={{ justifyContent: \"flex-end\", display: \"flex\" }}\n                >\n                  <CustomButton\n                    fullWidth\n                    type=\"submit\"\n                    variant=\"contained\"\n                    className=\"login-button\"\n                    onClick={handleSubmit}\n                  >\n                    Send Invitation\n                  </CustomButton>\n                </Grid>\n              </Grid>\n            </Grid>\n          </form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default AddNewDoctor;\n"],"sourceRoot":""}